[project]
name = "invest"
version = "0.1.0"
description = "Systematic investment analysis toolkit with objective, configuration-driven screening"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "yfinance>=0.2.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "beautifulsoup4>=4.12.3",
    "mcp>=1.13.1",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "matplotlib>=3.10.6",
    "lxml>=6.0.2",
    "lightgbm>=4.0.0",
    "catboost>=1.2.0",
    "scipy>=1.11.0",
]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.2.0",
    "ruff>=0.1.0",
    "bandit>=1.7.0",
    "psutil>=7.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-autorefs>=0.5.0",
]

[project.scripts]
systematic-invest = "scripts.systematic_analysis:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]  # Line too long (handled by line-length)

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    --strict-markers
    --strict-config
    --cov=src/invest
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=0
"""
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "international: marks tests for international markets",
    "valuation: marks tests for valuation models",
    "pipeline: marks tests for analysis pipeline",
    "performance: marks tests as performance tests",
    "cache: marks tests that involve caching",
    "dashboard: marks tests for dashboard functionality",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"
